@using AuditStorageSystem.Framework.Enum
@model AuditStorageSystem.Models.Audit

@{
    ViewBag.Title = "Create";
}

<h2>Create Audits</h2>

@using (Html.BeginForm("Create", "Audits", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ProjectId, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ServiceType, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ServiceType, "Select Service Type", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ServiceType, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlannedDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlannedDate, new {htmlAttributes = new {@class = "form-control datepicker", @autocomplete = "off"}})
                @Html.ValidationMessageFor(model => model.PlannedDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, "Select Status", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Status, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Auditors, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Auditors, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Auditors, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Result, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Result, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Result, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Result, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div id="fileInputFields">
                    <input type="file" name="uploads" /><br>
                </div>
                <input type="button" class="btn btn-default" id="fileInputBtn" value='Add Upload Field' onclick="addInputField('fileInputFields', 'file', 'uploads')"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
